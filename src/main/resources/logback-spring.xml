<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 minutes">
    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator" />
    <property name="log.files.dir" value="${LOG_HOME:-/var/log}" />
    <property name="log.files.max.count" value="${LOG_FILES_MAX_COUNT:-31}" />
    <property name="log.level.console" value="${LOG_CONSOLE_LEVEL:-OFF}" />
    <property name="log.console.pattern" value="${LOG_CONSOLE_PATTERN:-%d{yyyy-MM-dd'T'HH:mm:ss.SSS'Z',GMT} [SpecificConnector] [%thread] %-5level %logger{66} %marker -%X{sessionId} -%X{remoteHost} -%msg%n}" />
    <property name="log.level.specificconnector" value="${LOG_FILE_LEVEL:-INFO}" />
    <springProperty name="log.instance-id" scope="context" source="eidas.connector.app-instance-id" defaultValue="undefined" />
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${log.level.console}</level>
        </filter>
        <encoder>
            <pattern>${log.console.pattern}</pattern>
        </encoder>
    </appender>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${log.level.specificconnector}</level>
        </filter>
        <file>${log.files.dir}/SpecificConnector.%d{yyyy-MM-dd,GMT}.log</file>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <fieldName>@timestamp</fieldName>
                    <pattern>yyyy-MM-dd'T'HH:mm:ss.SSSZZ</pattern>
                    <timeZone>UTC</timeZone>
                </timestamp>
                <pattern>
                    <omitEmptyFields>true</omitEmptyFields>
                    <pattern>{
                        "log.level": "%level",
                        "log.logger": "%logger{40}",
                        "process.pid": "#asLong{%property{PID}}",
                        "process.thread.name": "%thread",
                        "service.name": "ee-eidas-connector",
                        "service.type": "specific",
                        "service.node.name": "${log.instance-id:-}",
                        "service.version": "%X{serviceVersion}",
                        "session.id": "%X{sessionId:-}",
                        "trace.id": "%X{spanId:-}",
                        "transaction.id": "%X{traceId:-}",
                        "message": "%message"
                        }</pattern>
                </pattern>
                <stackTrace>
                    <fieldName>error.stack_trace</fieldName>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <maxDepthPerThrowable>30</maxDepthPerThrowable>
                        <maxLength>2048</maxLength>
                        <shortenedClassNameLength>20</shortenedClassNameLength>
                        <exclude>^sun\.reflect\..*\.invoke</exclude>
                        <exclude>^net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
                        <rootCauseFirst>true</rootCauseFirst>
                    </throwableConverter>
                </stackTrace>
                <throwableRootCauseClassName>
                    <fieldName>error.type</fieldName>
                </throwableRootCauseClassName>
                <logstashMarkers />
                <arguments />
            </providers>
        </encoder>
        <param name="Append" value="true" />
        <!-- Support multiple-JVM writing to the same log file -->
        <prudent>true</prudent>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.files.dir}/SpecificConnector.%d{yyyy-MM-dd,GMT}.log</fileNamePattern>
            <maxHistory>${log.files.max.count}</maxHistory>
        </rollingPolicy>
    </appender>
    <logger name="ee.ria.eidas" level="${log.level.specificconnector}" />
    <root level="INFO">
        <appender-ref ref="FILE" />
        <appender-ref ref="STDOUT" />
    </root>
</configuration>